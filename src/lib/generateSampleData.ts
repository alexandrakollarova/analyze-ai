// This script generates sampleData.ts from the files in sample-files.
// Run with: node src/lib/generateSampleData.ts
// @ts-nocheck
const fs = require('fs');
const path = require('path');

const sampleDir = path.join(__dirname, 'sample-files');
const outFile = path.join(__dirname, 'sampleData.ts');

const uploadedByPool: string[] = ['Am√©lie Laurent', 'Ammar Foley', 'Sienna Hewitt', 'You'];
const documentTypes: { [key: string]: string } = {
  budget: 'Finance',
  nda: 'Legal',
  manual: 'Operations',
  customer: 'Sales',
  default: 'General',
};
const datePool: string[] = ['Jan 4, 2024', 'Jan 10, 2024', 'Feb 2, 2024', 'Mar 1, 2024'];

function getType(filename: string): string {
  return path.extname(filename).replace('.', '').toLowerCase();
}

function getDocumentType(filename: string): string {
  const lower = filename.toLowerCase();
  if (lower.includes('budget')) return documentTypes.budget;
  if (lower.includes('nda')) return documentTypes.nda;
  if (lower.includes('manual')) return documentTypes.manual;
  if (lower.includes('customer')) return documentTypes.customer;
  return documentTypes.default;
}

function getRandom<T>(arr: T[]): T {
  return arr[Math.floor(Math.random() * arr.length)];
}

const files: string[] = fs.readdirSync(sampleDir).filter((f: string) => !f.startsWith('.'));
const allSampleData: any[] = [];
const privateSampleData: any[] = [];
const sharedSampleData: any[] = [];

files.forEach((file: string, i: number) => {
  const stat = fs.statSync(path.join(sampleDir, file));
  const sizeKB = Math.round(stat.size / 1024);
  const type = getType(file);
  const documentType = getDocumentType(file);
  const uploadedBy = getRandom(uploadedByPool);
  const date = getRandom(datePool);
  const entry = {
    title: file.replace(/\.[^/.]+$/, ''),
    size: `${sizeKB} KB`,
    type,
    date,
    documentType,
    uploadedBy,
    file,
  };
  allSampleData.push(entry);
  if (/budget|nda/i.test(file)) privateSampleData.push(entry);
  if (/manual|customer/i.test(file)) sharedSampleData.push(entry);
});

const fileContent = `// Auto-generated by generateSampleData.ts\n\nexport const allSampleData = ${JSON.stringify(allSampleData, null, 2)};\n\nexport const privateSampleData = ${JSON.stringify(privateSampleData, null, 2)};\n\nexport const sharedSampleData = ${JSON.stringify(sharedSampleData, null, 2)};\n`;

fs.writeFileSync(outFile, fileContent);
console.log('sampleData.ts generated successfully!'); 